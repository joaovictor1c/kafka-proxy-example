name: Java CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build com Maven
        run: mvn -B clean package

      - name: Executar testes
        run: mvn test

      # - name: Análise SonarQube
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     mvn sonar:sonar \
      #     -Dsonar.projectKey=meu-projeto \
      #     -Dsonar.host.url=http://seu-sonarqube-url \
      #     -Dsonar.login=$SONAR_TOKEN

      # - name: Verificar vulnerabilidades com OWASP
      #   run: mvn org.owasp:dependency-check-maven:check

      # - name: Upload do artefato JAR
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: app-jar
      #     path: target/*.jar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build e Push da imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/nome-do-seu-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/nome-do-seu-app:${{ github.sha }}
