apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    events {
      worker_connections 1024;
    }

    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      
      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log /var/log/nginx/access.log main;
      sendfile on;
      keepalive_timeout 65;

      # CORS configuration
      map $http_origin $cors_origin {
          default "";
          "~^https?://localhost(:[0-9]+)?$" "$http_origin";
          "~^https?://your-domain\.com$" "$http_origin";
          # Add more allowed origins as needed
      }

      upstream backend {
        server java-app-service:80;
      }

      server {
        listen 80;
        server_name localhost;

        # CORS preflight
        location = /cors-preflight {
          add_header 'Access-Control-Allow-Origin' $cors_origin always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
          add_header 'Access-Control-Max-Age' 86400;
          add_header 'Content-Type' 'text/plain charset=UTF-8';
          add_header 'Content-Length' 0;
          return 204;
        }

        location / {
          # CORS headers
          add_header 'Access-Control-Allow-Origin' $cors_origin always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
          add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

          if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
          }

          proxy_pass http://backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health {
          access_log off;
          return 200 "healthy\n";
        }
      }
    } 